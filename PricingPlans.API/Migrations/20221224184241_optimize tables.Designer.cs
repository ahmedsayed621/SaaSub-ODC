// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PricingPlans.API.Data;

#nullable disable

namespace PricingPlans.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221224184241_optimize tables")]
    partial class optimizetables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PricingPlans.API.model.feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("featuresName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            featuresName = "Unlimited members"
                        },
                        new
                        {
                            Id = 2,
                            featuresName = "Unlimited feedback"
                        },
                        new
                        {
                            Id = 3,
                            featuresName = "Weekly team Feedback Friday"
                        },
                        new
                        {
                            Id = 4,
                            featuresName = "Custom Kudos +9 illustration"
                        });
                });

            modelBuilder.Entity("PricingPlans.API.model.plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descraption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceYear")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("plans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descraption = "Lorem ipsum dolor sit amet consectetur adipiscing elit interdum ullamcorper sed pharetra sene.",
                            Name = "Basic",
                            PriceMonth = 7m,
                            PriceYear = 96m
                        },
                        new
                        {
                            Id = 2,
                            Descraption = "Lorem ipsum dolor sit amet consectetur adipiscing elit interdum ullamcorper sed pharetra sene.",
                            Name = "Advanced",
                            PriceMonth = 7m,
                            PriceYear = 96m
                        },
                        new
                        {
                            Id = 3,
                            Descraption = "Lorem ipsum dolor sit amet consectetur adipiscing elit \r\ninterdum ullamcorper sed pharetra sene.",
                            Name = "Pro",
                            PriceMonth = 7m,
                            PriceYear = 96m
                        });
                });

            modelBuilder.Entity("PricingPlans.API.model.plansFeatures", b =>
                {
                    b.Property<int>("featureId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("featureId", "PlanId");

                    b.HasIndex("PlanId");

                    b.ToTable("plansFeatures");

                    b.HasData(
                        new
                        {
                            featureId = 1,
                            PlanId = 1,
                            Id = 0
                        },
                        new
                        {
                            featureId = 2,
                            PlanId = 1,
                            Id = 0
                        },
                        new
                        {
                            featureId = 3,
                            PlanId = 1,
                            Id = 0
                        },
                        new
                        {
                            featureId = 4,
                            PlanId = 1,
                            Id = 0
                        },
                        new
                        {
                            featureId = 1,
                            PlanId = 2,
                            Id = 0
                        },
                        new
                        {
                            featureId = 2,
                            PlanId = 2,
                            Id = 0
                        },
                        new
                        {
                            featureId = 3,
                            PlanId = 2,
                            Id = 0
                        });
                });

            modelBuilder.Entity("PricingPlans.API.model.plansFeatures", b =>
                {
                    b.HasOne("PricingPlans.API.model.plan", "Plan")
                        .WithMany("plansFeatures")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PricingPlans.API.model.feature", "feature")
                        .WithMany("plansFeatures")
                        .HasForeignKey("featureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("feature");
                });

            modelBuilder.Entity("PricingPlans.API.model.feature", b =>
                {
                    b.Navigation("plansFeatures");
                });

            modelBuilder.Entity("PricingPlans.API.model.plan", b =>
                {
                    b.Navigation("plansFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
